"""
Random库
（1）基本介绍
    -生产随机数的标准库，使用import即可使用。 import Random
    -机器没办法产生真随机数，只能使用‘梅森旋转算法’产生伪随机数。
    -随机数的产生需要种子（seed）。
    # 产生案例1····························································································
 (2)函数类型
    -基本随机数函数：seed(),random（）
        # 产生案例2························································································
    -拓展随机数函数：Randint(),getrandbits(),uniform(),randrange(),choice(),shuffle(),最后两个与序列有关。
        -Randint(a,b)
            产生a与b之间的随机整数
            # 产生案例3····················································································
        -randrange(m,n,k)
            产生从m不到n，以k为步长的随机数
            # 产生案例4····················································································
        getrandbits(n)
            产生n字节长度的随机数
            # 产生案例5····················································································
        uniform()
            产生a与b之间的随机小数
            # 产生案例6····················································································
        choice([1,2,4,8])
            随机选择序列中的数返回
            # 产生案例7····················································································
        shuffle([1,2,4,8])
            随机选择排列数列返回
            # 产生案例8····················································································


"""
# 案例1、2
import random
# random.seed(10)
# 具有一定的复现性
a = random.random()
print(a)

# 案例3
a = random.randint(10, 100)
print(a)

# 案例4
a = random.randrange(10, 100, 10)
print(a)

# 案例5
a = random.getrandbits(15)
print(a)

# 案例6
a = random.uniform(15, 1600)
print(a)

# 案例7
a = [1, 22, 33, 444, 5555, 6666, 77777, 888888, 99999, 10101010]
b = random.choice(a)
print(b)

a = [1, 22, 33, 444, 5555, 6666, 77777, 888888, 99999, 10101010];random.shuffle(a);print(a)
# 如果在代码编写过程中非常有必要将多行代码写在一行中，则使用分号“；”隔开，如上所示

