# 2022.03.09 序列类型及操作
"""
（1）序列类型定义
（2）序列函数及方法
（3）元组类型及操作
（4）列表类型及操作
（5）序列类型应用场景

（1）序列类型定义
    序列：具有 先后关系 的一组元素
    -序列是一维元素向量，元素之间可以相同，元素类型可以不同
    -类似元素序列
    -元素间由序号引导，由下标访问序列的元素
    -序列是一种 基类类型 ，不一般不直接使用，而是使用其衍生出的：字符串类型、元组类型、列表类型，
         -3 -2    -1      # 反向递减序号
        |01|as|好的没问题|
         0   1     2      # 正向递增序号

（2）序列函数及方法
    通用操作符
         1) in：判断在不在
         2) not in：判断是不是不在
         3) +：链接两个序列
         4) s*n或者n*s：将序列复制n次
         5) s[i]：s中的第i个元素
         6) s[i:j]或者s[i:j:k]：返回从i至j步长为k的元素子序列

    通用函数及方法
        1) len(s): 返回序列长度
        2) min(s): 返回序列中最小值，需要序列中的数值可以进行比较
        3) max(s): 返回序列中最大值，需要序列中的数值可以进行比较
        4) s.index(x): 返回序列中，第一次出现x的位置
        5) s.index(x,i,j): 返回序列中在（i，j）区间内，第一次出现x的位置
        6) s.count(x): 返回序列中x出现的次数

（3）元组类型及操作
    -序列类型的扩展之一
    -元组一旦创建无法被修改
    -使用（）或者tuple()创建，元素之间用逗号分隔
    -可以使用或者不使用（）
    -元组继承了序列的所有通用操作

（4）列表类型及操作
    -创建后可以随意被修改
    -使用[]或者list()创建，元素之间用逗号分隔
    -列表中的元素类型可以不同，没有长度限制
    -操作函数与方法
        1）ls[i]=x ：将列表中的第i元素，替换为x
        2）ls[i:j:k] = lt ：用列表lt替换ls切片后所对应元素子列表
        3）del ls[i] ：删除列表中的第i元素
        4）del ls[i:j:k] ：删除ls中第i至第j以k为步长的元素
        5）ls += lt ：更新列表ls，将lt中的元素增加到列表ls中
        6）ls *= n ：将列表ls重复n次
        7）ls.append(x) ：在列表ls后面追加x元素
        8）ls.clear() ：清空ls中所有元素
        9）ls.copy() ：生成一个新列表，赋值ls中所有元素
        10)ls.insert(i,x) ：在列表ls中第i位置增加元素x
        11）ls。pop(i) ：将列表ls第i位置元素取出并且删除该元素
        12）ls.remove(x) ：将列表了ls中出现的第1个元素x删除
        13）ls.reverse() ：将列表ls中的元素反转

（5）序列类型应用场景
    -元组用于元素不改变的应用场景、更多用于固定搭配场景
    -列表更加灵活，是最常用的序列类型
    -最主要作用，表示一组有序数字，进而操作他们

    1）元素遍历
        for item in ls
    2）对数据进行保护
        使用元组特性对数据进行只读操作










"""

ls = ["Python", 123, ".io"]
print(ls[::-1])

s = "Python123456.iso"
print(len(ls))
print(max(s))


def function():
    return 1, 2  # 这里返回了1和2，但Python认为只返回1个值，这个值为1个元组，其中包含1和2，这个元组并没有打括号


creature = "cat", "dog", "tiger", "human"
print(creature)  # 此时返回的值就是带有括号的: ("cat", "dog", "tiger", "human")
color = (0x001100, "blue", creature)
print(color)  # 更大的元组类型
