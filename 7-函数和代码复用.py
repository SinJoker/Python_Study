"""
函数的定义与使用
    函数主要作用为：降低变成难度、代码复用
    （1）函数的理解与定义
    （2）函数的使用与调用过程
    （3）函数的参数传递
    （4）函数的返回值
    （5）局部变量与全局变量
    （6）lambda函数

    （1）函数的理解与定义
    （2）函数的使用与调用过程
    定义：
        def 函数名（必选参数，可选参数）   # 可选参数必须放在必选参数的后面，用，区别
            语句
        return 返回值
            # 产生实例1·················································································

    （3）函数的参数传递
    （4）函数的返回值
        1）确定参数传递
        2）可选参数传递，确定参数数量但不确定用不用。
            # 产生实例2·················································································
        3）可变参数传递，不确定参数总数量
            # 产生实例3·················································································
        4）参数可以按照位置、名称进行传递，如实例2
        5）return可以返回0至多个值,见实例3，输出的数据为元祖类型，使用（a,b,c）的形式展现。值可以赋予变量。

    （5）局部变量与全局变量
        区别变量在于函数内外，具有以下规则：
        （1）局部变量与全局变量是不同的变量，名称相同但不是相同变量。可以使用global保留字在函数内部生成全局变量
            # 产生实例4·················································································
        (2)局部变量为组合数据类型且未创建，等同于全局变量
            # 产生实例5·················································································

    （6）lambda函数
        lambda函数，返回函数名作为结果。适用于较为简单的函数。
            # 产生实例6·················································································
"""


# 实例1 计算一个数的阶乘
# 当定义函数时，括号里的参数叫做：形式参数。


def fact(n1):
    s1 = 1
    for i in range(1, n1 + 1):
        s1 *= i
    return s1


# 上面是函数的使用


print(fact(10))


# 上面是函数的调用
# IPO input、process、output，输入处理再输出的过程，函数就是实现IPO的过程。


# 实例2 可选参数的，计算数的阶乘
def fact(n2, m=1):
    s2 = 1
    for i in range(1, n2 + 1):
        s2 *= i
    return s2 // m


# //表示整除


print(fact(10))
print(fact(10, 3))
# 按照位置传递的方式
# 同时可以指定n,m的值
print(fact(n2=10, m=12), fact(m=10, n2=12))


# 按照名称传递的方式
# m可选可不选


# 实例3
def fact(n, *b):
    s3 = 1
    for i in range(1, n + 1):
        s3 *= i
    for item in b:
        s3 *= item
    return s3, item, s3 // item


a, b1, c = fact(10, 3, 5, 8)
# 值可以赋予变量
print(fact(10, 3, 5, 8))
print(a, b1, c)
# 值可以赋予变量

# 实例4
k, s4 = 10, 100


def fact(k1):
    s4 = 1
    for i in range(1, k1 + 1):
        s4 *= i
    return s4


print(fact(k), s4)

ls = ["hello", "world"]
print(ls)


def ad(lines):
    ls.append(lines)
    return


ad("Python")
print(ls)

funct = lambda x, y: pow(x, y)
print(funct(10, 15))
# 一般不建议使用lambda函数，只在特定条件下使用
